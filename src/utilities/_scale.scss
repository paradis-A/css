// Scale
// options to pass to the utility API
//

// Default values
$scale-values: map-get($config, scale) !default;
$scale-state: hover !default;
$scale-responsive: true !default;

// Override default options with the theme's ones
$scale-defaults: (
    responsive: if(map-has-key($theme, scale, responsive), map-get($theme, scale, responsive), $scale-responsive),
    values: if(map-has-key($theme, scale, values), map-get($theme, scale, values), $scale-values),
    disable: if(map-has-key($theme, scale, disable), map-get($theme, scale, disable), false)
) !default;

$scale-options: (
    property: --#{$variable-prefix}scale-x --#{$variable-prefix}scale-y,
    class: scale,
    responsive: map-get($scale-defaults, responsive),
    values: map-get($scale-defaults, values),
);

$scale-y-options: (
    property: --#{$variable-prefix}-scale-y,
    class: scale-y,
    responsive: map-get($scale-defaults, responsive),
    values: map-get($scale-defaults, values),
);

$scale-x-options: (
    property: --#{$variable-prefix}-scale-x,
    class: scale-x,
    responsive: map-get($scale-defaults, responsive),
    values: map-get($scale-defaults, values),
);

// Merge states (variants)
@if(map-has-key($theme, scale, state)) {
    // Push new values to default list if not null
    $scale-state: if($scale-state != null, append($scale-state, map-get($theme, scale, state)), map-get($theme, scale, state));

    // Merge states with the utility options
    $scale-options: map-merge($scale-options, (
        state: map-get($theme, scale, state)
    ));
    $scale-y-options: map-merge($scale-y-options, (
        state: map-get($theme, scale, state)
    ));
    $scale-x-options: map-merge($scale-x-options, (
        state: map-get($theme, scale, state)
    ));
} @else {
    @if($scale-state != null) {
        $scale-options: map-merge($scale-options, (
            state: $scale-state
        ));
        $scale-y-options: map-merge($scale-y-options, (
            state: $scale-state
        ));
        $scale-x-options: map-merge($scale-x-options, (
            state: $scale-state
        ));
    }
}
