// Border style
// options to pass to the utility API
//

// Default values
$border-style-values: map-get($config, border-style) !default;
$border-style-state: null !default;
$border-style-responsive: true !default;

// Override default options with the theme's ones
$border-style-defaults: (
    responsive: if(map-has-key($theme, border-style, responsive), map-get($theme, border-style, responsive), $border-style-responsive),
    values: if(map-has-key($theme, border-style, values), map-get($theme, border-style, values), $border-style-values),
    disable: if(map-has-key($theme, border-style, disable), map-get($theme, border-style, disable), false)
) !default;

$border-style-options: (
    property: border-style,
    class: border,
    responsive: map-get($border-style-defaults, responsive),
    values: map-get($border-style-defaults, values),
);

// Merge states (variants)
@if(map-has-key($theme, border-style, state)) {
    // Push new values to default list if not null
    $border-style-state: if($border-style-state != null, append($border-style-state, map-get($theme, border-style, state)), map-get($theme, border-style, state));

    // Merge states with the utility options
    $border-style-options: map-merge($border-style-options, (
        state: map-get($theme, border-style, state)
    ));
} @else {
    @if($border-style-state != null) {
        $border-style-options: map-merge($border-style-options, (
            state: $border-style-state
        ));
    }
}
