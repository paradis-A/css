// Opacity
// options to pass to the utility API
//

// Default values
$opacity-values: map-get($config, opacity) !default;
$opacity-state: hover !default;
$opacity-responsive: true !default;

// Override default options with the theme's ones
$opacity-defaults: (
    responsive: if(map-has-key($theme, opacity, responsive), map-get($theme, opacity, responsive), $opacity-responsive),
    values: if(map-has-key($theme, opacity, values), map-get($theme, opacity, values), $opacity-values),
    disable: if(map-has-key($theme, opacity, disable), map-get($theme, opacity, disable), false)
) !default;

// Set options
$opacity-options: (
    property: opacity,
    class: opacity,
    responsive: map-get($opacity-defaults, responsive),
    values: map-get($opacity-defaults, values),
);

// Merge states (variants)
@if(map-has-key($theme, opacity, state)) {

    // Push new values to default list if not null
    $opacity-state: if($opacity-state != null, append($opacity-state, map-get($theme, opacity, state)), map-get($theme, opacity, state));

    // Merge states with the utility options
    $opacity-options: map-merge($opacity-options, (
        state: $opacity-state
    ));
} @else {
    @if($opacity-state != null) {
        $opacity-options: map-merge($opacity-options, (
            state: $opacity-state
        ));
    }
}
