// Transition delay
// options to pass to the utility API
//

// Default values
$transition-delay-values: map-get($config, transition-delay) !default;
$transition-delay-state: null !default;
$transition-delay-responsive: true !default;

// Override default options with the theme's ones
$transition-delay-defaults: (
    responsive: if(map-has-key($theme, transition-delay, responsive), map-get($theme, transition-delay, responsive), $transition-delay-responsive),
    values: if(map-has-key($theme, transition-delay, values), map-get($theme, transition-delay, values), $transition-delay-values),
    disable: if(map-has-key($theme, transition-delay, disable), map-get($theme, transition-delay, disable), false)
) !default;

$transition-delay-options: (
    property: transition-delay,
    class: delay,
    responsive: map-get($transition-delay-defaults, responsive),
    values: map-get($transition-delay-defaults, values),
);

// Merge states (variants)
@if(map-has-key($theme, transition-delay, state)) {
    // Push new values to default list if not null
    $transition-delay-state: if($transition-delay-state != null, append($transition-delay-state, map-get($theme, transition-delay, state)), map-get($theme, transition-delay, state));

    // Merge states with the utility options
    $transition-delay-options: map-merge($transition-delay-options, (
        state: map-get($theme, transition-delay, state)
    ));
} @else {
    @if($transition-delay-state != null) {
        $transition-delay-options: map-merge($transition-delay-options, (
            state: $transition-delay-state
        ));
    }
}
