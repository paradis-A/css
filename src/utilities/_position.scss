// Position
// options to pass to the utility API
//

@import "../core";

// Default values
$position-types: map-get($config, position) !default;
$position-state: null !default;
$position-responsive: true !default;

// Override default options with the theme's ones
$position-defaults: (
    responsive: if(map-has-key($theme, position, responsive), map-get($theme, position, responsive), $position-responsive),
    values: if(map-has-key($theme, position, values), map-get($theme, position, values), $position-types),
    disable: if(map-has-key($theme, position, disable), map-get($theme, position, disable), false)
) !default;

$position-options: (
    property: position,
    class: position,
    responsive: map-get($position-defaults, responsive),
    values: map-get($position-defaults, values),
);

// Merge states (variants)
@if(map-has-key($theme, position, state)) {
    // Push new values to default list if not null
    $position-state: if($position-state != null, append($position-state, map-get($theme, position, state)), map-get($theme, position, state));

    // Merge states with the utility options
    $position-options: map-merge($position-options, (
        state: map-get($theme, position, state)
    ));
} @else {
    @if($position-state != null) {
        $position-options: map-merge($position-options, (
            state: $position-state
        ));
    }
}
